<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<meta name="viewport" content="user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, width=device-width"/>
<title>API Demo: Request KakaoTalk friends list - Kakao JavaScript SDK</title>
<script src="//developers.kakao.com/sdk/js/kakao.min.js"></script>

</head>
<body>
<a id="kakao-login-btn"></a>
<script type='text/javascript'>
  //<![CDATA[
    // 사용할 앱의 JavaScript 키를 설정해 주세요.
    Kakao.init('c20ca427260a4dd55e79c1d4e3773089');
    // 카카오 로그인 버튼을 생성합니다.
    Kakao.Auth.createLoginButton({
      container: '#kakao-login-btn',
      success: function(authObj) {
        // 로그인 성공시, API를 호출합니다.
        Kakao.API.request({
          url: '/v2/user/me',
          // data: { property_keys: "kakao_account.email" },
          success: function(res) {
            alert(JSON.stringify(res));
            // https://developers.kakao.com/docs/js/kakao-api
      //       var userID = res.id;      //유저의 카카오톡 고유 id
      //  var userEmail = res.kaccount_email;   //유저의 이메일
      //  var userNickName = res.properties.nickname; //유저가 등록한 별명
       
      //  console.log(userID);
      //  console.log(userEmail);
      //  console.log(userNickName);
          },
          fail: function(error) {
            alert(JSON.stringify(error));
          }
        });
      },
      fail: function(err) {
        alert(JSON.stringify(err));
      }
    });
  //]]>
</script>

</body>
</html>

<div class="inner-container">
  <ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item">
      <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">포스트</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">질문</a>
    </li>
  </ul>
  <div class="tab-content" id="myTabContent">
    <div class="tab-pane show active" id="home" role="tabpanel" aria-labelledby="home-tab">
      <%= render 'posts/new'%>
    </div>
    <div class="tab-pane" id="profile" role="tabpanel" aria-labelledby="profile-tab">
      <%= render partial: "custom_questions/new", locals: {custom_question: CustomQuestion.new} %>
    </div>
  </div>
  <div id='infinite-feeds'>
    <%= render partial: 'feeds/friends_index', locals: {feeds: @feeds} %>
  </div>
</div>

<script>
  $('body').trigger('click');
  check_channels($(".answer-button"))

  // $(".posting").on('click', function () {
  //   var selected = $(this);
  //   $(this).addClass("selected");
  //   $('.custom-question').removeClass("selected");
  //   $(this).parent().parent().parent().removeClass("custom-question-form");
  //   $(this).parent().parent().removeClass("custom-question-form");
  //   $('#new-post-form').show();
  //   $('#new-custom-question-form').hide();
  // })

  // $(".custom-question").on('click', function () {
  //   var selected = $(this);
  //   $(this).addClass("selected");
  //   $(this).parent().parent().parent().addClass("custom-question-form");
  //   $(this).parent().parent().addClass("custom-question-form");
  //   $('.posting').removeClass("selected");
  //   $('#new-custom-question-form').show();
  //   $('#new-post-form').hide();
  // })
</script>
<script>

  $("#tags input").on({
    focusout : function() {
      var txt = this.value.replace(/[\<\>\,\r\n\;\\]/ig,''); // allowed characters
      // console.log(txt)
      if(txt.trim()!=''){
        let tag = $("<span/>", {text:txt.trim(), insertBefore:this, addClass:'tag'});
        tag.append(`<img src="/assets/icons/close-default-icon.png" alt="Exit Icon" class="tag-close">`)
        
        tag.find(".tag-close").on('click', function() {
          tag.remove(); 
        });
      }

      this.value = "";
    },
    keyup : function(e) {
      // if: comma|enter (delimit more keyCodes with | pipe)
      if(/(188|13)/.test(e.which)) $(this).focusout(); 
    }
  });

  $(".new_custom_question").submit(function(e) {
    e.preventDefault();
    form = $(this)

    var tag_string = ""
    $("#tags").find(".tag").each(function() {
      tag_string += $(this).text() + '\r\n'
    })

    form.find("#custom_question_tag_string").val(tag_string)

    $.ajax({
        type: "POST",
        url: form.attr('action'),
        data: form.serialize(),
        success: function(data) {
            console.log("successed!")
        },
        error: function(data) {
            console.log("error!")
        }
    })
  })
</script>

