<script>


  function getReplyHtml(content, created_at, id) {
    var new_url = "/replies/" + id;

    return $(`
      <div class='reply'>
        <div class="comment-content">
          <span>
            <%= link_to image_tag(current_user.image.url, :class => "user-profile"), profile_path(current_user.id) %>
            <%= link_to current_user.username, profile_path(current_user.id), class: "username" %>
            <span class="content">
              ${content}
            </span> 
          </span>
        </div>
        <div class = "comment-info">
            <time datetime='${created_at}', class='timeago'></time>
            <span>
                <span>좋아요 <span class="show-likes">0</span>개</span>
                <span class="btn-comment-delete" data-url="${new_url}">삭제</span>
            </span>
        </div> 
      </div>
    `)
  }

  function getButtonLike(like_url, like_changed_url) {
    return $(
      `
      <img src='/assets/icons/like-default-icon' 
      class='btn-comment-like do-like'
      data-url='${like_url}'
      data-changed-src='/assets/icons/like-on-icon'
      data-changed-url='${like_changed_url}'>
      `
    )
  }

  $(document).ready(function() {

    $("form").submit( function(e) {

        e.preventDefault();

        var form = $(this)
        $.ajax({
          type: "POST",
          url: form.attr('action'),
          data: form.serialize(),
          success: function(data) {
           
            if(form.hasClass("comment")) {
              var new_url = "/comments/" + data.id;
              console.log(new_url);
              console.log("hey"); 

              var html = $(`
              <div class='comment-replies-form'>
                <div class='comment-replies'>
                  <div class='comment'>
                    <div class='comment-content'>
                      <span>
                        <%= link_to image_tag(current_user.image.url, :class => "user-profile"), profile_path(current_user.id) %>
                        <%= link_to current_user.username, profile_path(current_user.id), class: "username" %>
                        <span class="content">
                          ${data.content}
                        </span> 
                      </span>
                    </div>
                    <div class = "comment-info">
                        <time datetime='${data.created_at}', class='timeago'></time>
                        <span>
                            <span>좋아요 <span class="show-likes">0</span>개</span>
                            <span class="btn-comment-delete" data-url="${new_url}">삭제</span>
                        </span>
                    </div> 
                  </div>
                </div>
                <%= form_tag replies_path, :class => "prism-form reply" do %>
                    <%= hidden_field_tag "id", "${data.comment_id}" %>
                    <%= text_field_tag "content", "", :class => "prism-form__input" %>
                    <%= button_tag "저장", class: "prism-form__button" %>
                <% end %>
              </div>
              `)

              var btn_like = getButtonLike(data.like_url, data.like_changed_url)
              html.find(".comment-content").append(btn_like)
              form.parent().find(".anonymous-comments-div").append(html)

              ///////// 동적으로 삽입한 form에 다시 event binding 해줌. 하나만 선택해야됨.
              like_ajax(btn_like)
              delete_ajax(html.find(".btn-comment-delete"))
              html.find("time.timeago").timeago();
              html.find("form").submit( function(event) {

                var new_form = $(this)

                event.preventDefault();
                $.ajax({
                  type: "POST",
                  url: new_form.attr('action'),
                  data: new_form.serialize(),
                  success: function(data) {
                    var new_html = getReplyHtml(data.content, data.created_at, data.id)
                    var new_btn_like = getButtonLike(data.like_url, data.like_changed_url)
                    new_html.find(".comment-content").append(new_btn_like)
                    new_form.parent().find(".comment-replies").append(new_html);

                    like_ajax(new_btn_like)
                    delete_ajax(new_html.find(".btn-comment-delete"))
                    new_form.find(".prism-form__input").val('')
                  },
                  error: function(data) {
                    console.log("error")
                  }
                })
              })

            }
            else {
              console.log("here");
              var html = getReplyHtml(data.content, data.created_at, data.id)
              var btn_like = getButtonLike(data.like_url, data.like_changed_url)
              html.find(".comment-content").append(btn_like)
              form.parent().find(".comment-replies").append(html)

              like_ajax(btn_like)
              delete_ajax(html.find(".btn-comment-delete"))
              html.find("time.timeago").timeago();
            }
            form.find(".prism-form__input").val('')
          },
          error: function(data) {
              console.log("error")
          }
        })
    })

  })
</script>